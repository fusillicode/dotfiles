name: CI

on:
  push:
    branches:
      - main
    paths:
      - ".github/**"
      - "yog/**"
  pull_request:
    paths:
      - ".github/**"
      - "yog/**"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.ref }}-ci
  cancel-in-progress: true

jobs:
  cargo_sort:
    name: Cargo sort
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup (cargo-sort)
        uses: ./.github/actions/setup
        with:
          tools: "cargo-sort"
      - name: Check Cargo.toml ordering (cargo-sort)
        working-directory: yog
        run: |
          cargo sort --workspace --check

  machete:
    name: Cargo machete
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup (cargo-machete)
        uses: ./.github/actions/setup
        with:
          tools: "cargo-machete"
      - name: Detect unused dependencies (cargo-machete)
        working-directory: yog
        run: |
          cargo machete --with-metadata

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup (no extra tools)
        uses: ./.github/actions/setup
      - name: Lint code (clippy)
        working-directory: yog
        run: |
          cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup (no extra tools)
        uses: ./.github/actions/setup
      - name: Test
        working-directory: yog
        run: |
          cargo test --workspace --all-features

  release:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup (no extra tools)
        uses: ./.github/actions/setup
      - name: Build
        working-directory: yog
        run: |
          cargo build --release
