#!/bin/bash

set -euo pipefail

get_latest_release() {
  curl -s https://api.github.com/repos/"$1"/releases/latest | grep "tag_name" | cut -d '"' -f 4 | cat
}

mkdir -p ~/.local/bin && cd ~/.local/bin

curl -L https://github.com/rust-lang/rust-analyzer/releases/download/nightly/rust-analyzer-aarch64-apple-darwin.gz | \
  gunzip -c - > rust-analyzer && \
  chmod +x rust-analyzer

curl -L https://github.com/tamasfe/taplo/releases/latest/download/taplo-darwin-aarch64.gz | \
  gunzip -c - > taplo && \
  chmod +x taplo

repo="elixir-lsp/elixir-ls"
latest_release=$(get_latest_release $repo)
mkdir -p elixir-ls && \
  curl -L https://github.com/"$repo"/releases/download/v"$latest_release"/elixir-ls-v"$latest_release".zip | \
  tar -xf - -C elixir-ls - && \
  chmod +x elixir-ls/*.sh

repo="tekumara/typos-vscode"
latest_release=$(get_latest_release $repo)
curl -L https://github.com/"$repo"/releases/download/v"$latest_release"/typos-lsp-v"$latest_release"/-aarch64-apple-darwin.tar.gz | \
  tar -xzsf - -C typos-lsp && \
  chmod +x typos-lsp

repo="koalaman/shellcheck"
latest_release=$(get_latest_release $repo)
curl -L https://github.com/"$repo"/releases/download/v"$latest_release"/shellcheck-v"$latest_release".darwin.x86_64.tar.xz | \
  tar -xzsf - -C shellcheck && \
  chmod +x shellcheck

latest_release=$(get_latest_release "hashicorp/terraform-ls")
curl -L https://releases.hashicorp.com/terraform-ls/"$latest_release"/terraform-ls_"$latest_release"_darwin_arm64.zip && \
  tar -xf - && \
  chmod +x terraform-ls

curl -L https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Darwin-x86_64 --output hadolint && \
  chmod +x hadolint

curl -L https://github.com/mrjosh/helm-ls/releases/latest/download/helm_ls_darwin_amd64 --output helm_ls && \
  chmod +x helm_ls

curl -L https://github.com/artempyanykh/marksman/releases/latest/download/marksman-macos --output marksman && \
  chmod +x marksman

repo="lexical"
git clone git@github.com:lexical-lsp/"$repo".git && \
  cd "$repo" && \
  mix deps.get && \
  mix package && \

mkdir -p phpactor && \
  composer require --working-dir "$_" --dev phpactor/phpactor &&
mkdir -p php-cs-fixer && \
  composer require --working-dir "$_" --dev friendsofphp/php-cs-fixer &&
mkdir -p psalm && \
  composer require --working-dir "$_" --dev vimeo/psalm &&

mkdir -p commitlint && \
  npm install --prefix "$_" --save-dev @commitlint/{cli,config-conventional} &&
mkdir -p elm-language-server && \
  npm install --prefix "$_" --save-dev @elm-tooling/elm-language-server &&
mkdir -p compose-language-service && \
  npm install --prefix "$_" --save-dev @microsoft/compose-language-service &&
mkdir -p bash-language-server && \
  npm install --prefix "$_" --save-dev bash-language-server &&
mkdir -p dockerfile-language-server-nodejs && \
  npm install --prefix "$_" --save-dev dockerfile-language-server-nodejs &&
mkdir -p graphql-language-service-cli && \
  npm install --prefix "$_" --save-dev graphql-language-service-cli &&
mkdir -p prettier && \
  npm install --prefix "$_" --save-dev prettier &&
mkdir -p sql-language-server && \
  npm install --prefix "$_" --save-dev sql-language-server &&
mkdir -p vscode-html-languageservice && \
  npm install --prefix "$_" --save-dev vscode-html-languageservice &&
mkdir -p vscode-json-languageservice && \
  npm install --prefix "$_" --save-dev vscode-json-languageservice &&
mkdir -p vscode-langservers-extracted && \
  npm install --prefix "$_" --save-dev vscode-langservers-extracted &&
mkdir -p yaml-language-server && \
  npm install --prefix "$_" --save-dev yaml-language-server &&

mkdir -p ruff-lsp && \
  pip install --target=./"$_"

rtx use -g lua-language-server@latest
